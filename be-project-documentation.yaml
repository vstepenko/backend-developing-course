
openapi: 3.0.1
info:
  title: Backed Course  project
  description: This project include all lections of BE course
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Car controller
    description: 'This controller contain CRUD operations for cars '
paths:
  "/cars":
    get:
      tags:
        - Car controller
      operationId: getCars
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CarDto"
    put:
      tags:
        - Car controller
      operationId: editCar
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CarDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
    post:
      tags:
        - Car controller
      operationId: addCar
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CarDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
    delete:
      tags:
        - Car controller
      operationId: deleteCar
      responses:
        '200':
          description: OK
  "/hello":
    get:
      tags:
        - test-controller
      operationId: hello
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  "/car":
    get:
      tags:
        - Car controller
      summary: return car
      description: Return car by Id
      operationId: getCar
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json: {}
        '400':
          description: Invalid ID supplied
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CarDto"
        '404':
          description: Customer not found
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CarDto"
        '500':
          description: Internal server error
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CarDto"
components:
  schemas:
    CarDto:
      type: object
      properties:
        code:
          title: Unique code of car
          type: string
        name:
          type: string
        description:
          type: string
